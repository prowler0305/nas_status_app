swagger: '2.0'
info:
  description: |
    The USCC Engineering REST API provides a centralized API for getting access to the databases available at U.S. Cellular.
    
    ## What is contained in this version?
    In this version the USCC ENG API provides the ability to generate the exact REST API url needed to interact with the HBASE database that contains DPI data.
    
    The primary use of this API is to enable Automation and Analytics Engineers to speed up their automation development when needing to retreive DPI data from HBASE without needing to know the format of the HBASE REST API urls.
    
    
    
  version: "1.0.0"
  title: U.S. Cellular Engineering REST API (Prototype)
  # put the contact info for your development or API team
  contact:
    email: Andrew.Spear@uscellular.com

  # license:
  #   name: Apache 2.0
  #   url: http://www.apache.org/licenses/LICENSE-2.0.html

# tags are used for organizing operations
# tags:
# - name: admins
#   description: Secured Admin-only calls
# - name: developers
#   description: Operations available to regular developers
produces:
  - application/json
parameters:
  databaseName:
    in: query
    name: db_name
    required: true
    enum: [hbase]
    type: string
    description: Name of the database to produce the url for
  tableName:
    in: query
    name: table_name
    required: true
    type: string
    description: The name of the table the request is for
paths:
  /:
    get:
      summary: List all USCC ENG REST API endpoints
      description: |
        Returns a JSON object of all the endpoint paths available in the API with a description of the endpoint purpose. The information is returned with the API endpoint as the key and the description as the value.
        
        ### Example 
        
        {'/v1/list_all': "List all the tables in the database name requested"}
        
      responses:
        200:
          description: List all API Endpoints.
  /list_all:
    get:
      # tags:
      # - developers
      summary: List all the tables defined in a database.
      description: Lists all the tables defined in the database requested.
      parameters:
        - $ref: '#/parameters/databaseName'
      responses:
        200:
          description: List all tables URL.
          schema:
              $ref: '#/definitions/genericUrlReturned'
          examples: 
            application/json: {"hbase_url": "http://ilscha03-hden-01.uscc.com:20550/"}
  /action:
    get:
        summary: Perform a set of pre-defined actions against a specific table.
        description: Allows the specific actions schema and regions to be performed against a request table.
        produces:
          - application/json
        parameters:
          - $ref: '#/parameters/databaseName'
          - in: query
            name: action_type
            description: Actions that can be done against a table. (e.g. column definitions)
            type: string
            enum: 
              - schema
              - regions
            default: schema
          - $ref: '#/parameters/tableName'
        responses:
          200:
            description: Return URL to perform schema or regions action against requested table.
            schema:
              $ref: "#/definitions/genericUrlReturned"
            examples: 
              application/json: {"hbase_url": "http://ilscha03-hden-01.uscc.com:20550/enodeb/schema"}
          400:
            $ref: "#/responses/BadInput"
          501:
            $ref: '#/responses/InternalError'
  # /row_query:
  #   get:
  #       summary: Row operations against a table.
  #       description: Allows query operations against a single row of a table.
  #       produces:
  #         - application/json
  #       parameters:
  #         - $ref: '#/parameters/databaseName'
  #         - $ref: '#/parameters/tableName'
  #         - in: query
  #           name: row_number
  #           description: Row in the table to retrieve data for
  #           type: integer
  #           required: true
  #           default: 1
  #       responses:
  #         200:
  #           description: Return URL to perform single row based query operation
  #           schema:
  #             $ref: "#/definitions/genericUrlReturned"
  #           examples: 
  #             application/json: 
  #               - {"hbase_url": "http://ilscha03-hden-01.uscc.com:20550/enodeb/1"}
  #         400:
  #           $ref: "#/responses/BadInput"
  #         501:
  #           $ref: '#/responses/InternalError'
  
    # post:
    #   # tags:
    #   # - admins
    #   summary: adds an inventory item
    #   operationId: addInventory
    #   description: Adds an item to the system
    #   consumes:
    #   - application/json
    #   produces:
    #   - application/json
    #   parameters:
    #   - in: body
    #     name: inventoryItem
    #     description: Inventory item to add
    #     schema:
    #       $ref: '#/definitions/InventoryItem'
    #   responses:
    #     201:
    #       description: item created
    #     400:
    #       description: invalid input, object invalid
    #     409:
    #       description: an existing item already exists
# Description o f common responses
responses:
  BadInput:
    description: Bad or Missing Input Parameters
    schema:
      $ref: "#/definitions/BadInput"
  InternalError:
    description: Internal Server Error
    schema:
      $ref: "#/definitions/InternalError"
definitions:
  genericUrlReturned:
    type: object
    properties:
      url_key_name:
        type: string
    required:
      - url_key_name
    example:
      hbase_url: http://ilscha03-hden-01.uscc.com:20550/
  BadInput:
    type: object
    properties:
      uscc_api_msg:
        type: string
        example: <parameter name> parameter is required and was either not found or found to not have a value. Please include parameter with request and try again.
  InternalError:
    type: object
    properties:
      uscc_api_msg:
        type: string
        example: USCC API action <some action keyword> is not available. Please see WNG API documentation.
# Added by API Auto Mocking Plugin
host: www.uscc-eng-api.devengos.uscc.com
basePath: /v1/
# host: virtserver.swaggerhub.com
# basePath: /prowler0305/wng2/1.0.0
schemes:
 - http